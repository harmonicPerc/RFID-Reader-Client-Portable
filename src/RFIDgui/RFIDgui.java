/* MIT License
 * 
 * Copyright (c) [2016] [Ross Bunker]
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package RFIDgui;
import java.io.IOException;

public class RFIDgui extends javax.swing.JFrame {

    /**
     * Creates new form rfid_gui
     */
    public RFIDgui() {
        initComponents();
        detectedTagTable.setColumnSelectionAllowed(false);
        updateTagTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editTagWindow = new javax.swing.JFrame();
        editTagPanel = new javax.swing.JPanel();
        idTextField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        thumbnailDisplay = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        exitTagWindow = new javax.swing.JButton();
        viewFullSizeImage = new javax.swing.JButton();
        fullImageWindow = new javax.swing.JFrame();
        fullImageLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        detectedTagScrollPanel = new javax.swing.JScrollPane();
        detectedTagTable = new javax.swing.JTable();
        mainExitButton = new javax.swing.JButton();
        scanButton = new javax.swing.JButton();
        openTagWindowButton = new javax.swing.JButton();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileMenuQuit = new javax.swing.JMenuItem();

        editTagWindow.setTitle("Edit Tag");
        editTagWindow.setMinimumSize(new java.awt.Dimension(400, 200));
        editTagWindow.setResizable(false);
        editTagWindow.setSize(new java.awt.Dimension(800, 445));

        editTagPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("RFID Tag Data"));
        editTagPanel.setPreferredSize(new java.awt.Dimension(500, 125));

        idTextField.setEditable(false);
        idTextField.setText("123456789");

        idLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idLabel.setText("id:");

        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name:");

        nameTextField.setEditable(false);
        nameTextField.setText("Sample Tag");

        descriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        descriptionLabel.setText("Description:");

        descriptionTextField.setEditable(false);
        descriptionTextField.setText("Sample description.");

        javax.swing.GroupLayout editTagPanelLayout = new javax.swing.GroupLayout(editTagPanel);
        editTagPanel.setLayout(editTagPanelLayout);
        editTagPanelLayout.setHorizontalGroup(
            editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTagPanelLayout.createSequentialGroup()
                .addGroup(editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(editTagPanelLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descriptionLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(editTagPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(editTagPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(thumbnailDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
                .addContainerGap())
        );
        editTagPanelLayout.setVerticalGroup(
            editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTagPanelLayout.createSequentialGroup()
                .addGroup(editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editTagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(editTagPanelLayout.createSequentialGroup()
                        .addComponent(descriptionLabel)
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thumbnailDisplay))
                    .addComponent(descriptionTextField))
                .addContainerGap(255, Short.MAX_VALUE))
        );

        exitTagWindow.setText("Exit");
        exitTagWindow.setMaximumSize(new java.awt.Dimension(70, 37));
        exitTagWindow.setMinimumSize(new java.awt.Dimension(70, 37));
        exitTagWindow.setPreferredSize(new java.awt.Dimension(70, 37));
        exitTagWindow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTagWindowMouseClicked(evt);
            }
        });

        viewFullSizeImage.setText("View Full Size Image");
        viewFullSizeImage.setMaximumSize(new java.awt.Dimension(178, 37));
        viewFullSizeImage.setMinimumSize(new java.awt.Dimension(178, 37));
        viewFullSizeImage.setPreferredSize(new java.awt.Dimension(178, 37));
        viewFullSizeImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewFullSizeImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout editTagWindowLayout = new javax.swing.GroupLayout(editTagWindow.getContentPane());
        editTagWindow.getContentPane().setLayout(editTagWindowLayout);
        editTagWindowLayout.setHorizontalGroup(
            editTagWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTagWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editTagWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editTagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                    .addGroup(editTagWindowLayout.createSequentialGroup()
                        .addComponent(viewFullSizeImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitTagWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        editTagWindowLayout.setVerticalGroup(
            editTagWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTagWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editTagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editTagWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exitTagWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewFullSizeImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        fullImageWindow.setTitle("RFID Tag Image");
        fullImageWindow.setSize(new java.awt.Dimension(536, 536));

        fullImageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullImageLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fullImageWindowLayout = new javax.swing.GroupLayout(fullImageWindow.getContentPane());
        fullImageWindow.getContentPane().setLayout(fullImageWindowLayout);
        fullImageWindowLayout.setHorizontalGroup(
            fullImageWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullImageWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fullImageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fullImageWindowLayout.setVerticalGroup(
            fullImageWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullImageWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fullImageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RFID Utility");
        setMaximumSize(new java.awt.Dimension(800, 480));
        setPreferredSize(new java.awt.Dimension(800, 415));
        setResizable(false);

        detectedTagScrollPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Detected Tags:"));

        detectedTagTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tag Number", "Name", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detectedTagTable.setColumnSelectionAllowed(true);
        detectedTagTable.setMinimumSize(new java.awt.Dimension(45, 200));
        detectedTagTable.getTableHeader().setReorderingAllowed(false);
        detectedTagTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detectedTagTableMouseClicked(evt);
            }
        });
        detectedTagScrollPanel.setViewportView(detectedTagTable);
        detectedTagTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (detectedTagTable.getColumnModel().getColumnCount() > 0) {
            detectedTagTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            detectedTagTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(detectedTagScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(detectedTagScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
        );

        mainExitButton.setText("Exit");
        mainExitButton.setMargin(new java.awt.Insets(5, 10, 5, 10));
        mainExitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainExitButtonMouseClicked(evt);
            }
        });

        scanButton.setText("Scan");
        scanButton.setMargin(new java.awt.Insets(5, 10, 5, 10));
        scanButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanButtonMouseClicked(evt);
            }
        });

        openTagWindowButton.setText("View Tag Information");
        openTagWindowButton.setMaximumSize(new java.awt.Dimension(184, 37));
        openTagWindowButton.setMinimumSize(new java.awt.Dimension(184, 37));
        openTagWindowButton.setPreferredSize(new java.awt.Dimension(184, 37));
        openTagWindowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openTagWindowButtonMouseClicked(evt);
            }
        });

        fileMenu.setText("File");

        fileMenuQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        fileMenuQuit.setText("Quit");
        fileMenuQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuQuitActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuQuit);

        mainMenuBar.add(fileMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(openTagWindowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scanButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainExitButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainExitButton)
                    .addComponent(scanButton)
                    .addComponent(openTagWindowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitReader() {
        setVisible(false);
        dispose();
    }

    private void exitTagWindowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTagWindowMouseClicked
        this.editTagWindow.setVisible(false);
        this.editTagWindow.dispose();
    }//GEN-LAST:event_exitTagWindowMouseClicked

    private void fileMenuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuQuitActionPerformed
        exitReader();
    }//GEN-LAST:event_fileMenuQuitActionPerformed
    
    private void populateTagWindow(RFIDdata currentIn){
        this.editTagWindow.setVisible(true);
        //this.editTagWindow.setSize(946, 442);
        this.idTextField.setText(currentIn.tagNumber);
        this.nameTextField.setText(currentIn.objectName);
        this.descriptionTextField.setText(currentIn.objectDescription);
        try {
            String current = new java.io.File( "." ).getCanonicalPath();
            String thumbnailName = currentIn.tagNumber.concat("thumb.png");
            java.nio.file.Path filePath = java.nio.file.Paths.get(current, "database", "pictures", thumbnailName);
            this.thumbnailDisplay.setIcon(new javax.swing.ImageIcon(filePath.toString()));
        } catch (IOException ex) {
            System.out.println("Error resizing the image.");
            ex.printStackTrace();
        }
    }
    
    private void readFromFile(String filenameIn) {
        org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser();
        try {
            org.json.simple.JSONObject obj = (org.json.simple.JSONObject) parser.parse(new java.io.FileReader(filenameIn));
            org.json.simple.JSONArray array = (org.json.simple.JSONArray) obj.get("RFID Data List");
            
            java.util.Iterator i = array.iterator();
            
            while (i.hasNext()) {
                org.json.simple.JSONObject innerObj = (org.json.simple.JSONObject) i.next();
                rfidTagList.add(new RFIDdata(innerObj.get("ID Number").toString(), innerObj.get("Name").toString(), innerObj.get("Description").toString()));
            }
            
            System.out.println(array.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void scanButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanButtonMouseClicked
        this.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.WAIT_CURSOR));
        rfidTagList = new java.util.ArrayList<RFIDdata>();
        ////// Troubleshooting
        //rfidTagList.add(new RFIDdata());
        //////        
        updateTagTable();
        this.setCursor(java.awt.Cursor.getDefaultCursor());
    }//GEN-LAST:event_scanButtonMouseClicked

    private void updateTagTable() {
        for (int i = 0; i < detectedTagTable.getRowCount(); i++) {
            for(int j = 0; j < detectedTagTable.getColumnCount(); j++) {
                detectedTagTable.setValueAt("", i, j);
            }
         }
        try {
            ProcessBuilder pb = new ProcessBuilder("python", "receiver.py");
            Process p = pb.start();
            p.waitFor();
            p.destroy();
                   
        } catch (Exception e) {
            System.out.println("Error while retrieving data from server");
            e.printStackTrace();
        }
        
        readFromFile(databaseFile);
        
//        ////////// Print Diagnostic Info
//        System.out.println("\n\nUpdate:\n");
//        for (int i = 0; i < this.rfidTagList.size(); i++) {
//            System.out.println(this.rfidTagList.get(i).tagNumber);
//            System.out.println(this.rfidTagList.get(i).objectName);
//            System.out.println(this.rfidTagList.get(i).objectDescription);
//        }
        
        for (int i = 0; i < rfidTagList.size(); i++) {
            detectedTagTable.setValueAt(rfidTagList.get(i).tagNumber, i, 0);
            detectedTagTable.setValueAt(rfidTagList.get(i).objectName, i, 1);
            detectedTagTable.setValueAt(rfidTagList.get(i).objectDescription, i, 2);
        }
    }
    
    private void detectedTagTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detectedTagTableMouseClicked
        if (evt.getClickCount() == 2) {
            javax.swing.JTable target = (javax.swing.JTable)evt.getSource();
            int row = target.getSelectedRow();

            RFIDdata current = rfidTagList.get(rfidTagList.indexOf(new RFIDdata(target.getValueAt(row, 0).toString())));
            
            populateTagWindow(current);
        }
    }//GEN-LAST:event_detectedTagTableMouseClicked

    private void viewFullSizeImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewFullSizeImageMouseClicked
        
        try {
            String current = new java.io.File( "." ).getCanonicalPath();
            String pictureName = this.idTextField.getText().concat(".png");
            java.nio.file.Path filePath = java.nio.file.Paths.get(current, "database", "pictures", pictureName);
            
            javax.swing.ImageIcon newIcon = new javax.swing.ImageIcon(filePath.toString());
            newIcon.getImage().flush();
            newIcon = new javax.swing.ImageIcon(filePath.toString());
            newIcon.getImage().flush();
            
            java.awt.Dimension pictureDimension = new java.awt.Dimension(newIcon.getIconWidth(), newIcon.getIconHeight());
            java.awt.Dimension windowDimension = new java.awt.Dimension(newIcon.getIconWidth() + 14, newIcon.getIconHeight() + 48);
            System.out.println(pictureDimension.toString());
            this.fullImageLabel.setSize(pictureDimension);
            this.fullImageLabel.setIcon(newIcon);
            this.fullImageLabel.updateUI();
            this.fullImageWindow.setSize(windowDimension);
            this.fullImageWindow.pack();
            this.fullImageWindow.setVisible(true);
            
        } catch (IOException ex) {
            System.out.println("Error finding image.");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_viewFullSizeImageMouseClicked

    private void fullImageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullImageLabelMouseClicked
        this.fullImageWindow.setVisible(false);
        this.fullImageWindow.dispose();
    }//GEN-LAST:event_fullImageLabelMouseClicked

    private void mainExitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainExitButtonMouseClicked
        exitReader();
    }//GEN-LAST:event_mainExitButtonMouseClicked

    private void openTagWindowButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openTagWindowButtonMouseClicked
        int row = this.detectedTagTable.getSelectedRow();
        RFIDdata current = rfidTagList.get(rfidTagList.indexOf(new RFIDdata(this.detectedTagTable.getValueAt(row, 0).toString())));    
        populateTagWindow(current);
    }//GEN-LAST:event_openTagWindowButtonMouseClicked
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RFIDgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RFIDgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RFIDgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RFIDgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RFIDgui().setVisible(true);
            }
        });
    }

    private java.util.ArrayList<RFIDdata> rfidTagList = new java.util.ArrayList<RFIDdata>();
    private String databaseFile = "./database/default.json";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JScrollPane detectedTagScrollPanel;
    private javax.swing.JTable detectedTagTable;
    private javax.swing.JPanel editTagPanel;
    private javax.swing.JFrame editTagWindow;
    private javax.swing.JButton exitTagWindow;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileMenuQuit;
    private javax.swing.JLabel fullImageLabel;
    private javax.swing.JFrame fullImageWindow;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton mainExitButton;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton openTagWindowButton;
    private javax.swing.JButton scanButton;
    private javax.swing.JLabel thumbnailDisplay;
    private javax.swing.JButton viewFullSizeImage;
    // End of variables declaration//GEN-END:variables
}
